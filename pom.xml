<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <name>Camunda Dev Tooling</name>
  <description>A small app to test DMN and FEEL</description>
  <groupId>org.example.camunda</groupId>
  <artifactId>camunda-8-dev-tooling</artifactId>
  <version>1.0.0-SNAPSHOT</version>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.7.9</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <properties>
    <java.version>17</java.version>
    <spring-zeebe.version>8.1.17</spring-zeebe.version>
    <zeebe.version>8.1.8</zeebe.version>
  </properties>

  <dependencies>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
	</dependency>

    <dependency>
      <!--  dmn evaluation -->
      <groupId>io.camunda</groupId>
      <artifactId>zeebe-dmn</artifactId>
      <version>${zeebe.version}</version>
    </dependency>
    <dependency>
      <groupId>io.camunda</groupId>
      <artifactId>zeebe-protocol-impl</artifactId>
      <version>${zeebe.version}</version>
    </dependency>

    <dependency>
      <groupId>io.camunda</groupId>
      <artifactId>spring-zeebe-starter</artifactId>
      <version>${spring-zeebe.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-ui</artifactId>
      <version>1.6.14</version>
    </dependency>
  </dependencies>
  
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>com.github.eirslett</groupId>
                    <artifactId>frontend-maven-plugin</artifactId>
                    <versionRange>[1.12.1,)</versionRange>
                    <goals>
                      <goal>install-node-and-npm</goal>
                      <goal>npm</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
		</plugin>
	  </plugins>
	</pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <!-- Google code format plugin -->
      <plugin>
        <groupId>com.spotify.fmt</groupId>
        <artifactId>fmt-maven-plugin</artifactId>
        <version>2.19</version>
        <executions>
          <execution>
            <?m2e execute onConfiguration,onIncremental?>
            <goals>
              <goal>format</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>1.12.1</version>
        <configuration>
          <workingDirectory>${project.basedir}/src/main/front</workingDirectory>
          <installDirectory>${project.basedir}/target</installDirectory>
        </configuration>
        <executions>
          <execution>
            <id>install node and npm</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <configuration>
              <nodeVersion>v18.5.0</nodeVersion>
              <npmVersion>8.12.1</npmVersion>
            </configuration>
          </execution>
          <execution>
            <id>npm install</id>
            <phase>process-sources</phase>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>install</arguments>
            </configuration>
          </execution>
          <execution>
            <id>react-script build</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>run build</arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Copy the front end into the static folder for JARs  -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <resources>
               
                <!-- Copy React index file and manifest -->
                <resource>
                  <directory>${basedir}/src/main/front/build</directory>
                  <targetPath>${basedir}/target/classes/static/</targetPath>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <!-- use Java 17 dependencies if available -->
      <id>jdk17+</id>
      <activation>
          <jdk>[17,)</jdk>
      </activation>
      <dependencies>
        <dependency>
          <!-- see: https://docs.camunda.io/docs/components/best-practices/development/testing-process-definitions/#writing-process-tests-in-java -->
          <groupId>io.camunda</groupId>
          <artifactId>zeebe-process-test-extension</artifactId>
          <version>${zeebe.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <!-- see: https://github.com/camunda-community-hub/spring-zeebe#writing-test-cases -->
          <groupId>io.camunda</groupId>
          <artifactId>spring-zeebe-test</artifactId>
          <version>${spring-zeebe.version}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <!-- use alternative dependencies if Java 17 is not available -->
      <id>jdk8-16</id>
      <activation>
          <jdk>[8,17)</jdk>
      </activation>
      <dependencies>
        <dependency>
          <!-- see: https://github.com/camunda/zeebe-process-test#testcontainers-jdk-8 -->
          <groupId>io.camunda</groupId>
          <artifactId>zeebe-process-test-extension-testcontainer</artifactId>
          <version>${zeebe.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <!-- see: https://github.com/camunda-community-hub/spring-zeebe#writing-test-cases -->
          <groupId>io.camunda</groupId>
          <artifactId>spring-zeebe-test-testcontainer</artifactId>
          <version>${spring-zeebe.version}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>
